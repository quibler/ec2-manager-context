services:
  # Nginx reverse proxy with SSL
  nginx:
    image: nginx:1.25-alpine
    container_name: odoo_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - odoo_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Odoo web service
  web:
    image: odoo:18.0
    container_name: odoo_web
    depends_on:
      - db
    environment:
      - HOST=db
      - USER=odoo
      - PASSWORD=odoo
    volumes:
      - ./custom_addons:/mnt/extra-addons
      - ./odoo.conf:/etc/odoo/odoo.conf
      - odoo_filestore:/var/lib/odoo/.local/share/Odoo/filestore
      - odoo_sessions:/var/lib/odoo/.local/share/Odoo/sessions
    user: root
    command: >
      bash -c "
        apt-get update &&
        apt-get install -y python3-pip python3-setuptools python3-wheel &&
        pip3 install --break-system-packages qifparse &&
        mkdir -p /var/lib/odoo/.local/share/Odoo/sessions /var/lib/odoo/.local/share/Odoo/filestore &&
        chown -R odoo:odoo /var/lib/odoo &&
        chmod -R 777 /var/lib/odoo &&
        exec /entrypoint.sh odoo"
    restart: unless-stopped
    networks:
      - odoo_network
    # Remove port exposure - nginx will handle external access
    expose:
      - "8069"
      - "8072"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8069/web/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL database
  db:
    image: postgres:16-alpine
    container_name: odoo_db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_USER=odoo
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - odoo_network
    # Only expose to localhost for database management if needed
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U odoo"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  db_data:
    driver: local
  odoo_filestore:
    driver: local
  odoo_sessions:
    driver: local
  nginx_logs:
    driver: local

networks:
  odoo_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16